ggplot(metazoa12trim, aes(x = class)) +
geom_bar() + coord_flip()
ggplot(metazoa12trim, aes(x = class)) +
geom_bar() + coord_flip() scale_x_discrete(limits = class)
ggplot(metazoa12trim, aes(x = class)) +
geom_bar() + coord_flip() + scale_x_discrete(limits = class)
ggplot(metazoa12trim, aes(x = class)) +
geom_bar() + coord_flip()
order(metazoa12trim$kingdom, decreasing = TRUE)
blup <- order(metazoa12trim$kingdom, decreasing = TRUE)
blup <- data(order(metazoa12trim$kingdom, decreasing = TRUE))
ggplot(metazoa12trim, aes(x = class)) +
geom_bar() + coord_flip() + factor(sort(class))
ggplot(metazoa12trim, aes(x = class)) +
geom_bar() + coord_flip() + factor(sort(n_unique_seqs))
ggplot(metazoa12trim, aes(x = "", y = class, fill = class)) +
coord_polar(theta = "y")
ggplot(metazoa12trim, aes(x = "", y = kingdom, fill = class)) +
coord_polar(theta = "y")
ggplot(metazoa12trim, aes(x = "", y = kingdom, fill = kingdom)) +
coord_polar(theta = "y")
ggplot(splist, aes(x = "", y = kingdom, fill = kingdom)) +
coord_polar(theta = "y")
ggplot(splist, aes(x = "", y = kingdom, fill = kingdom)) + geom_col() +
coord_polar(theta = "y")
ggplot(splist, aes(x = "", y = n_unique_seqs, fill = kingdom)) + geom_col(color = "black") +
coord_polar(theta = "y")
ggplot(meta12S, aes(x = "", y = n_unique_seqs, fill = kingdom)) + geom_col() +
coord_polar(theta = "y")
ggplot(meta12S, aes(x = "", y = n_unique_seqs, fill = kingdom)) + geom_col(color = "black") +
coord_polar(theta = "y")
splist <- readRDS("C:/Users/bydav/Desktop/SpeciesListCleaning_Complete/outputs/GNRMaineSpecies_May2024.RDS")
gonlylist <- readRDS("C:/Users/bydav/Desktop/SpeciesListCleaning_Complete/progression/GNRSpList_GenusOnly_May2024.RDS")
meta12S <- read.csv("C:/Users/bydav/Desktop/RefDB_Dev/output/2-May17-2024/12S_REFDB_metasum.csv", header = TRUE)
metaCOI <- read.csv("C:/Users/bydav/Desktop/RefDB_Dev/output/3-May19-2024/COI_REFDB_metasum.csv", header = TRUE)
library(ggplot2)
library(viridis)
library(dplyr)
View(splist)
splistout <- splist[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species')]
View(meta12S)
splistout <- splist[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species')]
meta12Sout <- meta12S[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species', 'n_target', 'n_unique_seqs')]
metaCOIout <- metaCOI[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species', 'n_target', 'n_unique_seqs')]
splistout <- splist[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species')]
meta12Sout <- meta12S[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species', 'n_target', 'n_unique_seqs')]
metaCOIout <- metaCOI[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species', 'n_target', 'n_unique_seqs')]
write.csv(splistout, "C:/Users/bydav/Desktop/Chap1Figs/MatchedSpList.csv")
write.csv(meta12Sout, "C:/Users/bydav/Desktop/Chap1Figs/12SNumbers.csv")
write.csv(metaCOIout, "C:/Users/bydav/Desktop/Chap1Figs/COINumbers")
# Remove species that didn't have any target sequences found
meta12 <- subset(meta12S, n_target != "0")
meta12 <- subset(meta12, n_target != "NA")
View(meta12)
# Remove species that didn't have any target sequences found
meta12 <- subset(meta12Sout, n_target != "0")
meta12 <- subset(meta12, n_target != "NA")
View(meta12)
# For COI
metaCOI <- subset(metaCOIout, n_target != "0")
metaCOI <- subset(metaCOI, n_target != "NA")
View(metaCOI)
un12sp <- unique(meta12$species)
un12g <- unique(meta12$genus)
unCOIsp <- unique(metaCOI$species)
unCOIg <- unique(metaCOI$genus)
length(un12sp)
clas(un12g)
class(un12g)
splist <- readRDS("C:/Users/bydav/Desktop/SpeciesListCleaning_Complete/outputs/GNRMaineSpecies_May2024.RDS")
gonlylist <- readRDS("C:/Users/bydav/Desktop/SpeciesListCleaning_Complete/progression/GNRSpList_GenusOnly_May2024.RDS")
meta12S <- read.csv("C:/Users/bydav/Desktop/RefDB_Dev/output/2-May17-2024/12S_REFDB_metasum.csv", header = TRUE)
metaCOI <- read.csv("C:/Users/bydav/Desktop/RefDB_Dev/output/3-May19-2024/COI_REFDB_metasum.csv", header = TRUE)
library(ggplot2)
library(viridis)
library(dplyr)
splistout <- splist[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species')]
meta12Sout <- meta12S[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species', 'n_target', 'n_unique_seqs')]
metaCOIout <- metaCOI[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species', 'n_target', 'n_unique_seqs')]
# Remove species that didn't have any target sequences found
# For 12S
meta12 <- subset(meta12Sout, n_target != "0")
meta12 <- subset(meta12, n_target != "NA")
# For COI
metaCOI <- subset(metaCOIout, n_target != "0")
metaCOI <- subset(metaCOI, n_target != "NA")
# Count # of unique genuses and species in each refDB
un12sp <- unique(meta12$species) # 6454
un12g <- unique(meta12$genus) # 3735
unCOIsp <- unique(metaCOI$species) # 10355
unCOIg <- unique(metaCOI$genus) # 5437
sp12 <- meta12[c( 'species')]
spCOI <- metaCOI[c('species)]
spCOI <- metaCOI[c('species')]
# Grab species from each only
sp12 <- meta12[c( 'species')]
spCOI <- metaCOI[c('species')]
spCross <- dplyr::intersect(sp12, spCOI)
View(spCross)
sp122 <- meta12[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species')]
spCOI2 <- metaCOI[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species')]
spCross2 <- dplyr::intersect(sp122, spCOI2)
spXCross <- setdiff(spCross2, spCross)
spXCross <- setdiff(spCross2$species, spCross$species)
View(spCross2)
sp12 <- meta12[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species')]
spCOI <- metaCOI[c('superkingdom', 'kingdom', 'phylum', 'class', 'order', 'family', 'genus', 'species')]
spCross <- dplyr::intersect(sp12, spCOI)
# What are the orders of the shared species?
ggplot(spCross, aes(x = order)) +
geom_bar()
# What are the orders of the shared species?
ggplot(spCross, aes(x = phylum)) +
geom_bar()
# What are the orders of the shared species?
ggplot(spCross, aes(x = kingdom)) +
geom_bar()
# What are the kingdoms of the shared species?
ggplot(spCross, aes(x = phylum)) +
geom_bar()
# What are the kingdoms of the shared species?
ggplot(spCross, aes(x = phylum)) +
geom_bar() + coord_flip()
levels(as.factor(spCross$phylum))
# What are the kingdoms of the shared species?
ggplot(spCross, aes(x = factor(phylum, levels(as.factor(df$group)))) +
# What are the phyla of the shared species?
ggplot(spCross, aes(x = phylum)) +
geom_bar(fill = kingdom) + coord_flip()
# What are the phyla of the shared species?
ggplot(spCross, aes(x = phylum, fill = kingdom)) +
# What are the phyla of the shared species?
ggplot(spCross, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip()
# What are the phyla of the sequence present refDBs?
ggplot(metaCOI, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip()
ggplot(meta12, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip()
ggplot(meta12, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_polar(theta = "y")
ggplot(meta12, aes(x = "", y = phylum, fill = kingdom)) +
geom_bar() + coord_polar(theta = "y")
ggplot(meta12, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_polar(theta = "y")
ggplot(meta12, aes(x = phylum, y = n_unique_seqs, fill = kingdom)) +
geom_bar() + coord_polar(theta = "y")
ggplot(meta12, aes(x = "", y = n_unique_seqs, fill = kingdom)) +
geom_bar() + coord_polar(theta = "y")
??aggregate
write.csv(splistout, "C:/Users/bydav/Desktop/Chap1Figs/MatchedSpList.csv")
write.csv(meta12, "C:/Users/bydav/Desktop/Chap1Figs/12SNumbers.csv")
write.csv(metaCOI, "C:/Users/bydav/Desktop/Chap1Figs/COINumbers.csv")
write.csv(spCross, "C:/Users/bydav/Desktop/Chap1Figs/SharedSp.csv")
# What are the phyla of the shared species?
ggplot(spCross, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip()
# What are the phyla of the shared species?
ggplot(spCross, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Number of Species by Phylum Shared Between Both Reference Databases")
# What are the phyla of the shared species?
ggplot(spCross, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Number of Shared Species by Phylum") +   geom_text(aes(label = count), vjust = -1, colour = "black")
# What are the phyla of the shared species?
ggplot(spCross, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Number of Shared Species by Phylum")
ggplot(meta12, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Distribution of Species with 12S References")
ggplot(meta12, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Species by Phylum with 12S References")
# What are the phyla of the sequence present refDBs?
ggplot(metaCOI, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Species by Phylum with COI References")
# What are the phyla of the shared species?
ggplot(spCross, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Number of Shared Species by Phylum")
# What are the phyla of the sequence present refDBs?
ggplot(metaCOI, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Species by Phylum with COI References")
kingdom
# Plot number of unique seqs by phylum
ggplot(metaCOI, aes(x = n_unique_seqs, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Species by Phylum with COI References")
# Plot number of unique seqs by phylum
ggplot(metaCOI, aes(x = n_unique_seqs, fill = kingdom)) +
geom_bar() + ggtitle("Species by Phylum with COI References")
# Test out using aggregate to get a list of n_unique_seqs by kingdom
meta12_unique <- aggregate(meta12$n_unique_seqs, list(meta12$kingdom), sum)
meta12_unique
View(meta12)
# Test out using aggregate to get a list of n_unique_seqs by kingdom
meta12_unique <- aggregate(meta12$n_unique_seqs, list(meta12$kingdom), FUN = length)
meta12_unique
# Test out using aggregate to get a list of n_unique_seqs by kingdom
meta12_unique <- aggregate(meta12$n_unique_seqs, list(meta12$kingdom), FUN = sum)
meta12_unique
meta12 %>%
group_by(kingdom) %>%
summarise(n_unique_seqs = sum(n_unique_seqs))
meta12 %>%
group_by(phylum) %>%
summarise(n_unique_seqs = sum(n_unique_seqs))
ggplot(metaCOI, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Species by Phylum with COI References")
ggplot(meta12, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Species by Phylum with 12S References")
# Plot number of unique seqs by phylum
ggplot(metaCOI, aes(x = n_unique_seqs, fill = kingdom)) +
geom_bar() + ggtitle("Species by Phylum with COI References")
write.csv(splistout, "C:/Users/bydav/Desktop/Chap1Figs/MatchedSpList.csv")
write.csv(meta12, "C:/Users/bydav/Desktop/Chap1Figs/12SNumbers.csv")
write.csv(metaCOI, "C:/Users/bydav/Desktop/Chap1Figs/COINumbers.csv")
write.csv(spCross, "C:/Users/bydav/Desktop/Chap1Figs/SharedSp.csv")
# What are the phyla of the shared species?
ggplot(spCross, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Number of Shared Species by Phylum")
# What are the phyla of the sequence present refDBs?
ggplot(metaCOI, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Species by Phylum with COI References")
ggplot(meta12, aes(x = phylum, fill = kingdom)) +
geom_bar() + coord_flip() + ggtitle("Species by Phylum with 12S References")
aggregate(splist$kingdom, by = list(splist$kingdom), FUN = length)
aggregate(splist$superkingdom, by = list(splist$superkingdom), FUN = length)
# Splist for kingdom and superkingdom (since Bacteria is split between the two)
aggregate(splist$phylum, by = list(splist$kingdom), FUN = length)
# Splist for kingdom and superkingdom (since Bacteria is split between the two)
aggregate(splist$phylum, by = list(splist$phylum), FUN = length)
# Splist for kingdom and superkingdom (since Bacteria is split between the two)
aggregate(splist$phylum, by = list(splist$phylum), FUN = length, order = "descending")
# Splist for kingdom and superkingdom (since Bacteria is split between the two)
aggregate(meta12$phylum, by = list(meta12$phylum), FUN = length)
aggregate(meta12$superkingdom, by = list(meta12$superkingdom), FUN = length)
# Splist for kingdom and superkingdom (since Bacteria is split between the two)
aggregate(meta12$phylum, by = list(meta12$phylum), FUN = length)
# Splist for kingdom and superkingdom (since Bacteria is split between the two)
aggregate(meta12$kingdom, by = list(meta12$kingdom), FUN = length)
aggregate(meta12$superkingdom, by = list(meta12$superkingdom), FUN = length)
# Splist for kingdom and superkingdom (since Bacteria is split between the two)
aggregate(metaCOI$kingdom, by = list(metaCOI$kingdom), FUN = length)
aggregate(metaCOI$superkingdom, by = list(metaCOI$superkingdom), FUN = length)
meta_meta12 <- subset(meta12, kingdom == "Animalia")
meta_meta12 <- subset(meta_meta12, kingdom == "Metazoa")
meta_meta12 <- meta12[ which( meta12$kingdom == "Animalia" | meta12$kingdom == "Metazoa") , ]
unique(meta_meta12$kingdom)
meta_meta12 <- meta12[ which( meta12$kingdom == "Animalia" | meta12$kingdom == "Metazoa") , ]
meta_splist <- splist[ which( splist$kingdom == "Animalia" | splist$kingdom == "Metazoa") , ]
meta_metaCOI <- metaCOI[ which( metaCOI$kingdom == "Animalia" | metaCOI$kingdom == "Metazoa") , ]
unique(meta_metaCOI$kingdom)
unique(meta_splist$kingdom)
# Metazoan splist for phylum and class
aggregate(meta_splist$phylum, by = list(meta_splist$phylum), FUN = length)
aggregate(meta_splist$class, by = list(meta_splist$class), FUN = length)
# Metazoan splist for phylum and class
meta_splist_phy <- aggregate(meta_splist$phylum, by = list(meta_splist$phylum), FUN = length)
meta_splist_class <- aggregate(meta_splist$class, by = list(meta_splist$class), FUN = length)
View(meta_splist_class)
# Metazoan meta12 for phylum and class
meta_meta12_phy <- aggregate(meta12$phylum, by = list(meta12$phylum), FUN = length)
meta_meta12_class <- aggregate(meta12$class, by = list(meta12$class), FUN = length)
# Metazoan metaCOI for phylum and class
meta_metaCOI_phy <- aggregate(metaCOI$phylum, by = list(metaCOI$phylum), FUN = length)
meta_metaCOI_class <- aggregate(metaCOI$class, by = list(metaCOI$class), FUN = length)
View(meta_splist_phy)
ggplot(meta_splist_phy, aes(x = "", y = x, fill = Group.1)) +
geom_col() +
coord_polar(theta = "y")
ggplot(meta_splist_class, aes(x = "", y = x, fill = Group.1)) +
geom_col() +
coord_polar(theta = "y")
# Metazoan meta12 for phylum and class
meta_meta12_phy <- aggregate(meta_meta12$phylum, by = list(meta_meta12$phylum), FUN = length)
meta_meta12_class <- aggregate(meta_meta12$class, by = list(meta_meta12$class), FUN = length)
# Metazoan metaCOI for phylum and class
meta_metaCOI_phy <- aggregate(meta_metaCOI$phylum, by = list(meta_metaCOI$phylum), FUN = length)
meta_metaCOI_class <- aggregate(meta_metaCOI$class, by = list(meta_metaCOI$class), FUN = length)
ggplot(meta_metaCOI_phy, aes(x = "", y = x, fill = Group.1)) +
+   geom_col() +
+   coord_polar(theta = "y")
ggplot(meta_metaCOI_phy, aes(x = "", y = x, fill = Group.1)) + geom_col() + coord_polar(theta = "y")
test_metaCOI_seqs <- aggregate(meta_metaCOI$n_unique_seqs, by=list(Category=meta_metaCOI$kingdom), FUN=sum)
test_metaCOI_seqs
View(metaCOI)
test_metaCOI_seqs <- aggregate(meta_metaCOI$n_target, by=list(Category=meta_metaCOI$kingdom), FUN=sum)
test_metaCOI_seqs
class(meta_metaCOI$n_target)
class(meta_metaCOI$n_unique_seqs)
tapply(metaCOI$n_unique_seqs, metaCOI$kingdom, FUN=sum)
tapply(metaCOI$n_unique_seqs, metaCOI$kingdom, FUN=sum, na.rm = TRUE, na.action = na.pass)
metaCOI_seqs <- tapply(metaCOI$n_target, metaCOI$kingdom, fun = sum)
metaCOI_seqs
metaCOI_seqs <- tapply(metaCOI$n_target, metaCOI$kingdom, FUN = sum)
metaCOI_seqs
metaCOI_seqs <- aggregate(metaCOI$n_target, by = list(metaCOI$kingdom), FUN = sum)
metaCOI_seqs
splist_seqs <- aggregate(splist$n_target, by = list(splist$kingdom), FUN = sum)
# Splist by Kingdom
splist_seqs <- aggregate(splist$n_target, by = list(splist$kingdom), FUN = sum)
View(splist)
# 12S by Kingdom
meta12S_seqs <- aggregate(meta12$n_target, by = list(meta12$kingdom), FUN = sum)
# Metazoa only 12S by Phylum
meta_meta12S_seqs <- aggregate(meta_meta12$n_target, by = list(meta_meta12$phylum), FUN = sum)
# Metazoa only 12S by Class
meta_meta12S_seqs <- aggregate(meta_meta12$n_target, by = list(meta_meta12$class), FUN = sum)
# COI by Kingdom
metaCOI_seqs <- aggregate(metaCOI$n_target, by = list(metaCOI$kingdom), FUN = sum)
# Metazoa only COI by Phylum
meta_metaCOI_seqs <- aggregate(meta_metaCOI$n_target, by = list(meta_metaCOI$phylum), FUN = sum)
# Metazoa only COI by Class
meta_metaCOI_seqs <- aggregate(meta_metaCOI$n_target, by = list(meta_metaCOI$class), FUN = sum)
View(meta_metaCOI_seqs)
# 12S by Kingdom
meta12S_seqsking <- aggregate(meta12$n_target, by = list(meta12$kingdom), FUN = sum)
# Metazoa only 12S by Phylum
meta_meta12S_seqsphy <- aggregate(meta_meta12$n_target, by = list(meta_meta12$phylum), FUN = sum)
# Metazoa only 12S by Class
meta_meta12S_seqsclass <- aggregate(meta_meta12$n_target, by = list(meta_meta12$class), FUN = sum)
# COI by Kingdom
metaCOI_seqsking <- aggregate(metaCOI$n_target, by = list(metaCOI$kingdom), FUN = sum)
# Metazoa only COI by Phylum
meta_metaCOI_seqsphy <- aggregate(meta_metaCOI$n_target, by = list(meta_metaCOI$phylum), FUN = sum)
# Metazoa only COI by Class
meta_metaCOI_seqsclass <- aggregate(meta_metaCOI$n_target, by = list(meta_metaCOI$class), FUN = sum)
View(meta_metaCOI_seqsphy)
View(meta_meta12S_seqs)
sum(meta_metaCOI_seqsclass$x)
View(meta_metaCOI_seqsclass)
meta_metaCOI_seqsclass$Prop <- (meta_metaCOI_seqsclass$x/sum(meta_metaCOI_seqsclass$x))
meta_metaCOI_seqsclass$Prop <- (meta_metaCOI_seqsclass$x/sum(meta_metaCOI_seqsclass$x)*100)
meta12S_seqsking$Prop <- (meta12S_seqsking$x/sum(meta12S_seqsking$x)*100)
meta_meta12S_seqsphy$Prop <- (meta_meta12S_seqsphy$x/sum(meta_meta12S_seqsphy$x)*100)
meta_meta12S_seqsclass$Prop <- (meta_meta12S_seqsclass$x/sum(meta_meta12S_seqsclass$x)*100)
metaCOI_seqsking$Prop <- (metaCOI_seqsking$x/sum(metaCOI_seqsking$x)*100)
meta_metaCOI_seqsphy$Prop <- (meta_metaCOI_seqsphy$x/sum(meta_metaCOI_seqsphy$x)*100)
meta_metaCOI_seqsclass$Prop <- (meta_metaCOI_seqsclass$x/sum(meta_metaCOI_seqsclass$x)*100)
View(meta12S_seqsking)
# Pie chart of 12S Kingdoms
ggplot(meta12S_seqsking, aes(x = "", y = Prop, fill = Group.1)) +
geom_col() +
coord_polar(theta = "y")
# Pie chart of 12S Kingdoms
ggplot(meta12S_seqsking, aes(x = "", y = Prop, fill = Group.1)) +
geom_col(color = "black") +
coord_polar(theta = "y")
# Pie Chart of COI Kingdoms
ggplot(metaCOI_seqsking, aes(x = "", y = Prop, fill = Group.1)) +
geom_col(color = "black") +
coord_polar(theta = "y")
View(metaCOI_seqsking)
View(meta_splist_phy)
View(meta_meta12_phy)
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_meta12_phy, aes(x = Group.1, y = x)) +
geom_bar(stat = "identity")
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_meta12_phy, aes(x = Group.1, y = x)) +
geom_bar(stat = "identity") + scale_color_viridis()
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_meta12_phy, aes(x = Group.1, y = x)) +
geom_bar(stat = "identity") + scale_fill_viridis()
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_meta12_phy, aes(x = Group.1, y = x)) +
geom_bar(stat = "identity") + scale_fill_viridis() + theme_bw()
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_meta12_phy, aes(x = Group.1, y = x)) +
geom_bar(stat = "identity") + scale_color_viridis() + theme_bw()
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_meta12_phy, aes(x = Group.1, y = x)) +
geom_bar(stat = "identity") + scale_color_viridis() #+ theme_bw()
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_meta12_phy, aes(x = Group.1, y = x)) +
geom_bar(stat = "identity") + scale_color_viridis() + theme_bw()
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_meta12_phy, aes(x = Group.1, y = x)) +
geom_col() + scale_color_viridis() + theme_bw()
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_meta12_phy, aes(x = Group.1, y = x)) +
geom_col() + scale_fill_viridis() + theme_bw()
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_meta12_phy, aes(x = Group.1, y = x)) +
geom_col() + scale_fill_viridis() + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12_seqsphy, aes(x = Group.1, y = x)) +
geom_col() + scale_fill_viridis() + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = x)) +
geom_col() + scale_fill_viridis() + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = x)) +
geom_col() + scale_fill_viridis() + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + coord_flip()
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop)) +
geom_col() + scale_fill_viridis() + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col() + scale_fill_viridis() + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = x)) +
geom_col() + scale_fill_viridis() + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = x)) +
geom_col() + scale_color_viridis() + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = x)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Prop)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + scale_fill_viridis() +
# Bar Plot of Meta-only Meta12 Phyla (seq)
```
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + scale_fill_viridis()
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw()# + geom_text(aes(label = x), vjust = -1, colour = "black")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black")
meta_meta12S_seqsphy$Prop <- (meta_meta12S_seqsphy$x/sum(meta_meta12S_seqsphy$x))
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences") + theme(legend.position = "bottom")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "Title of the plot",
subtitle = "Subtitle of the plot") + theme(legend.position = "bottom")
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "Title of the plot",
subtitle = "Subtitle of the plot") + theme(legend.position = "bottom") +  theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "Proportion and Number of Identified 12S Reference Sequences, by Phylum") + theme(legend.position = "bottom") +  theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "12S Reference Sequences, By Phylum") +  theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "12S Reference Sequences, By Phylum") +  theme.legend(position = "bottom") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "12S Reference Sequences, By Phylum") +  theme(legend.position = "bottom") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "12S Reference Sequences, By Phylum") +  theme(legend.position = "right") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "12S Reference Sequences, By Phylum", fill = "Phylum") +  theme(legend.position = "right") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_metaCOI_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "COI Reference Sequences, By Phylum", fill = "Phylum") +  theme(legend.position = "right") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
meta12S_seqsking$Prop <- (meta12S_seqsking$x/sum(meta12S_seqsking$x))
meta_meta12S_seqsphy$Prop <- (meta_meta12S_seqsphy$x/sum(meta_meta12S_seqsphy$x))
meta_meta12S_seqsclass$Prop <- (meta_meta12S_seqsclass$x/sum(meta_meta12S_seqsclass$x))
metaCOI_seqsking$Prop <- (metaCOI_seqsking$x/sum(metaCOI_seqsking$x))
meta_metaCOI_seqsphy$Prop <- (meta_metaCOI_seqsphy$x/sum(meta_metaCOI_seqsphy$x))
meta_metaCOI_seqsclass$Prop <- (meta_metaCOI_seqsclass$x/sum(meta_metaCOI_seqsclass$x))
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_metaCOI_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "COI Reference Sequences, By Phylum", fill = "Phylum") +  theme(legend.position = "right") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_metaCOI_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black", angle = 90) + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "COI Reference Sequences, By Phylum", fill = "Phylum") +  theme(legend.position = "right") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only Meta12 Class (seq)
ggplot(meta_meta12S_seqsclass, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Class", y = "Proportion of Total Identified Sequences", title = "12S Reference Sequences, By Class", fill = "Class") +  theme(legend.position = "right") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only Meta12 Class (seq)
ggplot(meta_meta12S_seqsclass, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Class", y = "Proportion of Total Identified Sequences", title = "12S Reference Sequences, By Class", fill = "Class") +  theme(legend.position = "none") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_metaCOI_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black", angle = 90) + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "COI Reference Sequences, By Phylum", fill = "Phylum") +  theme(legend.position = "none") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only Meta12 Phyla (seq)
ggplot(meta_meta12S_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "12S Reference Sequences, By Phylum", fill = "Phylum") +  theme(legend.position = "none") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_metaCOI_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black", angle = 90) + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "COI Reference Sequences, By Phylum", fill = "Phylum") +  theme(legend.position = "none") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
# Bar Plot of Meta-only MetaCOI Phyla (seq)
ggplot(meta_metaCOI_seqsphy, aes(x = Group.1, y = Prop, fill = Group.1)) +
geom_col()  + theme_bw() + geom_text(aes(label = x), vjust = -1, colour = "black") + labs(x = "Identified Phylum", y = "Proportion of Total Identified Sequences", title = "COI Reference Sequences, By Phylum", fill = "Phylum") +  theme(legend.position = "none") + theme(axis.text.x = element_text(angle=90, vjust=.5, hjust=1))
View(meta12S)
meta12S <- read.csv("C:/Users/bydav/Desktop/RefDB_Dev/output/2-May17-2024/12S_REFDB_metasum.csv", header = TRUE)
metaCOIfull <- read.csv("C:/Users/bydav/Desktop/RefDB_Dev/output/3-May19-2024/COI_REFDB_metasum.csv", header = TRUE)
# Species list input
specieslist2 <- readRDS("C:/Users/bydav/Desktop/RefDB_Dev/input/GNRMaineSpecies_May2024.RDS")
View(metaCOIfull)
View(splist)
View(meta12)
12Smissing <- read.csv("C:/Users/bydav/Desktop/RefDB_Dev/output/2-May17-2024/StepG3Output.csv", header = TRUE)
missing12 <- read.csv("C:/Users/bydav/Desktop/RefDB_Dev/output/2-May17-2024/StepG3Output.csv", header = TRUE)
count12 <- unique(missing12$order)
count12
View(meta_splist_phy)
View(meta_metaCOI_seqsphy)
View(meta_metaCOI_phy)
View(meta_meta12_phy)
View(meta_metaCOI_phy)
View(meta_meta12_phy)
